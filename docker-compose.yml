version: '3'
services:
    proxy:
        image: traefik:v2.2
        networks:
            - traefik-public
            - default
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command:
            # Enable Docker in Traefik, so that it reads labels from Docker services
            - --providers.docker
            # Add a constraint to only use services with the label for this stack
            # from the env var TRAEFIK_TAG
            - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `pandoc.gijsentius.com`)
            # Do not expose all Docker services, only the ones explicitly exposed
            - --providers.docker.exposedbydefault=false
            # Enable Docker Swarm mode
            # - --providers.docker.swarmmode
            # Enable the access log, with HTTP requests
            - --accesslog
            # Enable the Traefik log, for configurations and errors
            - --log
            # Enable the Dashboard and API
            - --api
        labels: 
            # Enable Traefik for this service, to make it available in the public network
            - traefik.enable=true
            # Use the traefik-public network (declared below)
            - traefik.docker.network=traefik-public
            # Use the custom label "traefik.constraint-label=traefik-public"
            # This public Traefik will only use services with this label
            - traefik.constraint-label=traefik-public
            # traefik-http set up only to use the middleware to redirect to https
            - traefik.http.middlewares.pandoc-gijsentius-com-https-redirect.redirectscheme.scheme=https
            - traefik.http.middlewares.pandoc-gijsentius-com-https-redirect.redirectscheme.permanent=true
            # Handle host with and without "www" to redirect to only one of them
            # Uses environment variable DOMAIN
            # To disable www redirection remove the Host() you want to discard, here and
            # below for HTTPS
            - traefik.http.routers.pandoc-gijsentius-com-proxy-http.rule=Host(`pandoc.gijsentius.com`) || Host(`www.pandoc.gijsentius.com`)
            - traefik.http.routers.pandoc-gijsentius-com-proxy-http.entrypoints=http
            # traefik-https the actual router using HTTPS
            - traefik.http.routers.pandoc-gijsentius-com-proxy-https.rule=Host(`pandoc.gijsentius.com`) || Host(`www.pandoc.gijsentius.com`)
            - traefik.http.routers.pandoc-gijsentius-com-proxy-https.entrypoints=https
            - traefik.http.routers.pandoc-gijsentius-com-proxy-https.tls=true
            # Use the "le" (Let's Encrypt) resolver created below
            - traefik.http.routers.pandoc-gijsentius-com-proxy-https.tls.certresolver=le
            # Define the port inside of the Docker service to use
            - traefik.http.services.pandoc-gijsentius-com-proxy.loadbalancer.server.port=80
            # Handle domain with and without "www" to redirect to only one
            # To disable www redirection remove the next line
            - traefik.http.middlewares.pandoc-gijsentius-com-www-redirect.redirectregex.regex=^https?://(www.)?(pandoc.gijsentius.com)/(.*)
            # Redirect a domain with www to non-www
            # To disable it remove the next line
            - traefik.http.middlewares.pandoc-gijsentius-com-www-redirect.redirectregex.replacement=https://pandoc.gijsentius.com/$${3}
            # Redirect a domain without www to www
            # To enable it remove the previous line and uncomment the next
            # - traefik.http.middlewares.${STACK_NAME}-www-redirect.redirectregex.replacement=https://www.${DOMAIN}/$${3}
            # Middleware to redirect www, to disable it remove the next line 
            - traefik.http.routers.pandoc-gijsentius-com-proxy-https.middlewares=pandoc-gijsentius-com-www-redirect
            # Middleware to redirect www, and redirect HTTP to HTTPS
            # to disable www redirection remove the section: ${STACK_NAME?Variable not set}-www-redirect,
            - traefik.http.routers.pandoc-gijsentius-com-proxy-http.middlewares=pandoc-gijsentius-com-www-redirect,pandoc-gijsentius-com-https-redirect

    client:
        restart: always
        build: 
            dockerfile: Dockerfile
            context: ./client
        depends_on:
            - service
        labels:
            - traefik.enable=true
            - traefik.constraint-label-stack=pandoc-gijsentius.com
            - traefik.http.routers.pandoc-gijsentius-com-backend-http.rule=PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)
            - traefik.http.services.pandoc-gijsentius-com-backend.loadbalancer.server.port=80

    service:
        restart: always
        build: 
            dockerfile: Dockerfile
            context: ./service
        labels: 
            - traefik.enable=true
            - traefik.constraint-label-stack=pandoc-gijsentius.com
            - traefik.http.routers.pandoc-gijsentius-com-frontend-http.rule=PathPrefix(`/`)
            - traefik.http.services.pandoc-gijsentius-com-frontend.loadbalancer.server.port=80

networks:
  traefik-public:
    # Allow setting it to false for testing
    external: true